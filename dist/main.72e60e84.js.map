{"version":3,"sources":["js/theme-menu.js","js/calculator.js","js/main.js"],"names":["MenuSwitch","_body","document","getElementsByTagName","_darkThemeBtn","querySelector","_lightThemeBtn","_violetThemeBtn","_toggleCircle","render","addEventListener","changeTheme","bindEvents","loadTheme","checkUserDefaultTheme","preferenceTheme","localStorage","getItem","theme","window","matchMedia","setItem","classList","setAttribute","Calculator","_calculator","_calculatorKeys","querySelectorAll","_calculatorScreen","_calculatorDisplay","_firstOperand","_secondOperand","_operation","_regex","event","forEach","key","dataset","value","add","setTimeout","remove","runOperation","input","keyInput","keyValue","clearScreen","validateInput","calculateResult","startCalculation","outputErorrMessage","resetCalculator","Error","updateDisplay","operand","operator","parseFloat","textContent","content","test","clearDisplay","operationValue","eval","setScreenValue","resetSecondOperand","message","App"],"mappings":"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","file":"main.72e60e84.js","sourceRoot":"..\\src","sourcesContent":["\r\nexport default class MenuSwitch {\r\n    constructor(){\r\n        \r\n        // dom caching \r\n        this._body = document.getElementsByTagName(\"body\")[0];\r\n        this._darkThemeBtn = this._body.querySelector(\".toggle__menu-input--dark-theme\");\r\n        this._lightThemeBtn = this._body.querySelector(\".toggle__menu-input--light-theme\");\r\n        this._violetThemeBtn = this._body.querySelector(\".toggle__menu-input--violet-theme\");\r\n        this._toggleCircle = this._body.querySelector(\".toggle__menu-circle\");\r\n        // render \r\n        this.render()\r\n\r\n    }\r\n\r\n    // bindint events\r\n    bindEvents(){\r\n\r\n\r\n        // theming \r\n        this._darkThemeBtn.addEventListener(\"click\",()=> { this.changeTheme(\"dark-theme\")})\r\n        this._lightThemeBtn.addEventListener(\"click\",()=> { this.changeTheme(\"light-theme\")})\r\n        this._violetThemeBtn.addEventListener(\"click\",()=> { this.changeTheme(\"violet-theme\")})\r\n        \r\n\r\n    }\r\n\r\n    // rendering \r\n    render(){\r\n        this.bindEvents();\r\n        this.loadTheme();\r\n        this.checkUserDefaultTheme();\r\n    }\r\n\r\n    // setting the theme accordingly to user preference\r\n    loadTheme(){\r\n        const preferenceTheme = localStorage.getItem(\"preference-theme\") || '';\r\n        const theme = localStorage.getItem(\"theme\") || \"\";\r\n        preferenceTheme ? this.changeTheme(preferenceTheme) : \"\";\r\n        theme ? this.changeTheme(theme) : \"\";\r\n\r\n    }\r\n\r\n    /**\r\n     * prograssive enhancement \r\n     * adjusting the thme to user's system level theme setting\r\n     */\r\n    checkUserDefaultTheme(){\r\n        const lightTheme = window.matchMedia(\"preference-color-scheme:light;\");\r\n        localStorage.setItem(\"preference-theme\",\"light-theme\");\r\n    }\r\n\r\n    // change theme and locate toggle correctly \r\n    changeTheme(theme){\r\n        if(theme === \"dark-theme\"){\r\n            this._body.classList = theme;\r\n            this._toggleCircle.classList = \"toggle__menu-circle\";\r\n            localStorage.setItem(\"theme\",\"dark-theme\");\r\n\r\n            // updating state \r\n            this._darkThemeBtn.setAttribute(\"aria-checked\",\"true\");\r\n            this._lightThemeBtn.setAttribute(\"aria-checked\",\"false\");\r\n            this._violetThemeBtn.setAttribute(\"aria-checked\",\"false\");\r\n\r\n        }else if (theme === \"light-theme\"){\r\n            this._body.classList = theme;\r\n            this._toggleCircle.classList = \"toggle__menu-circle toggle__menu-circle--light-theme\";\r\n            localStorage.setItem(\"theme\",\"light-theme\");\r\n\r\n\r\n            this._darkThemeBtn.setAttribute(\"aria-checked\",\"false\");\r\n            this._lightThemeBtn.setAttribute(\"aria-checked\",\"true\");\r\n            this._violetThemeBtn.setAttribute(\"aria-checked\",\"false\");\r\n\r\n        }else if(theme === \"violet-theme\"){\r\n            this._body.classList = theme;\r\n            this._toggleCircle.classList = \"toggle__menu-circle toggle__menu-circle--violet-theme\";\r\n            localStorage.setItem(\"theme\",\"violet-theme\");\r\n\r\n            this._darkThemeBtn.setAttribute(\"aria-checked\",\"false\");\r\n            this._lightThemeBtn.setAttribute(\"aria-checked\",\"false\");\r\n            this._violetThemeBtn.setAttribute(\"aria-checked\",\"true\");\r\n        }\r\n    }\r\n}","\r\n\r\nexport default class Calculator{\r\n\r\n    constructor(){\r\n\r\n        // dom caching \r\n        this._calculator = document.querySelector(\".calculator\");\r\n        this._calculatorKeys = this._calculator.querySelectorAll(\".calculator__keyboard-key\");\r\n        this._calculatorScreen = this._calculator.querySelector(\".calculator__screen-input\");\r\n        this._calculatorDisplay = this._calculator.querySelector(\".calculator__screen-display\")\r\n        this._firstOperand = \"\";\r\n        this._secondOperand= \"\";\r\n        this._operation;\r\n        this._regex = /\\d{1,20}$/\r\n\r\n\r\n       // rendering \r\n       this.render();\r\n    }\r\n\r\n    // event binding \r\n    bindEvents(){\r\n\r\n        // linking the keys to keyboard \r\n        document.addEventListener(\"keypress\",(event)=>{\r\n            this._calculatorKeys.forEach(key => {\r\n                if(key.dataset.value === event.key){\r\n                    key.classList.add(\"calculator__keyboard-key--active\");\r\n                    setTimeout(()=>{\r\n                        key.classList.remove(\"calculator__keyboard-key--active\")},100);\r\n                    this.runOperation(key.dataset.input,key.dataset.value)\r\n                }\r\n            })\r\n        })\r\n\r\n     \r\n        // responding to key inteaction \r\n        this._calculatorKeys.forEach(key => {\r\n            key.addEventListener(\"click\",(event)=> {\r\n                const keyInput = key.dataset.input;\r\n                const keyValue = key.dataset.value;\r\n                this.runOperation(keyInput,keyValue)\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    // rendering \r\n    render(){\r\n        this.clearScreen();\r\n        this.bindEvents();\r\n    }\r\n\r\n    runOperation(keyInput=\"\",keyValue=\"\"){\r\n        // if the keyInput is a operand \r\n        if(keyInput === \"operand\"){\r\n            this._calculatorScreen.value += `${keyValue}`;\r\n\r\n        // if the keyInput is a operator\r\n        }else if(keyInput === \"operator\"){\r\n            const input = this._calculatorScreen.value;\r\n            // validate input \r\n            if(this.validateInput(input)){\r\n                (keyValue === \"=\") ? \r\n                (this.calculateResult()):\r\n                this.startCalculation(input,keyValue);\r\n            }else{\r\n                // invalid input, notify the user and reset calculator\r\n                let message = \"Invalid input\";\r\n                this.outputErorrMessage(message);\r\n                setTimeout(()=>{ this.resetCalculator()},2000)\r\n            }\r\n\r\n        \r\n        // if the keyInput is a setting \r\n        }else if (keyInput === \"setting\"){\r\n            if(keyValue === \"reset\"){\r\n                this.resetCalculator();\r\n\r\n            }else{\r\n                this.clearScreen();\r\n                this.updateDisplay();\r\n            }\r\n        \r\n        }else{\r\n            throw Error(`Invalid operation${keyInput}`)\r\n        }\r\n    }\r\n\r\n\r\n    startCalculation(operand=\"\",operator=\"\"){\r\n        this._firstOperand = parseFloat(operand);\r\n        this._operation = operator;\r\n        this.updateDisplay();\r\n        this.clearScreen();\r\n    }\r\n\r\n    clearDisplay(){\r\n        this._calculatorDisplay.textContent = \"\";\r\n    }\r\n\r\n    // reset the calculator \r\n    updateDisplay(content=\"\"){\r\n        (!content) ? \r\n        (this._calculatorDisplay.textContent = \r\n        `${this._firstOperand} ${this._operation } ${this._secondOperand}`) :\r\n        (this._calculatorDisplay.textContent = content);\r\n    }\r\n\r\n    validateInput(input){\r\n        return this._regex.test(input) ? input : \"\";\r\n    }\r\n    \r\n    resetCalculator(){\r\n        this._firstOperand = \"\";\r\n        this._secondOperand = \"\";\r\n        this._operation = \"\";\r\n        this.clearDisplay();\r\n        this.clearScreen();\r\n    }\r\n\r\n    // completing calculation\r\n    calculateResult(){\r\n        this._secondOperand = parseFloat(this._calculatorScreen.value);\r\n        this.updateDisplay();\r\n        this.clearScreen();\r\n        let operationValue= eval(`${this._firstOperand} ${this._operation} ${this._secondOperand}`);\r\n        this.setScreenValue(operationValue)\r\n        this.resetSecondOperand();\r\n    }\r\n\r\n    outputErorrMessage(message=\"invalid input\"){\r\n        this._calculatorScreen.value = `${message}`\r\n    }\r\n    \r\n    resetFirstOperand(){\r\n        this._firstOperand = \"\";\r\n    }\r\n\r\n    resetSecondOperand(){\r\n        this._secondOperand = \"\";\r\n    }\r\n\r\n    setScreenValue(value=\"\"){\r\n        this._calculatorScreen.value += value;\r\n    }\r\n\r\n    clearScreen(){\r\n        this._calculatorScreen.value = \"\";\r\n    }\r\n\r\n  \r\n}","import MenuSwitch from \"./theme-menu\";\r\nimport Calculator from \"./calculator\";\r\n\r\nconst App = (function(){\r\n    document.addEventListener(\"DOMContentLoaded\",()=>{\r\n        const Calculator1 = new Calculator();\r\n        const MenuSwitch1 = new MenuSwitch();\r\n    })\r\n}());\r\n\r\n"]}